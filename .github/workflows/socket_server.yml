name: Moochat Socket Server CI/CD

on:
  push:
    branches: [ main ]
    tags:
    - '*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - uses: actions/checkout@v2

    - name: create env file
      run: |
        touch .env
        echo PORT=${{ secrets.PORT }} >> .env
        echo REDIS_ENDPOINT=${{ secrets.REDIS_ENDPOINT }} >> .env
        echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Test Build
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ci
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

    - name: push the image to Amazon ECR
      if: startsWith(github.ref, 'refs/tags/v') && (github.event.pull_request.merged == 'true' || github.event_name == 'push')
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        GITHUB_REF: ${{ github.ref }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF#refs/tags/} -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF#refs/tags/}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF#refs/tags/}"
